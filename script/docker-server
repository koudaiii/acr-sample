#!/bin/bash
set -e

# Load environment variables if .env file exists
if [ -f .env ]; then
  export $(cat .env | grep -v '^#' | xargs)
fi

# Default values
ACR_REGISTRY=${ACR_REGISTRY:-acrsamplekoudaiii.azurecr.io}
IMAGE_NAME=${IMAGE_NAME:-acrsample}
IMAGE_TAG=${IMAGE_TAG:-latest}
CONTAINER_NAME=${CONTAINER_NAME:-acr-sample-app}
PORT=${PORT:-8000}

# Stop and remove existing container if running
if [ "$(docker ps -a -q -f name=${CONTAINER_NAME})" ]; then
    echo "Stopping existing container..."
    docker stop ${CONTAINER_NAME} || true
    docker rm ${CONTAINER_NAME} || true
fi

echo "Starting Docker container..."
echo "Image: ${ACR_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
echo "Container: ${CONTAINER_NAME}"
echo "Port: ${PORT}"
echo ""

# Run the container
docker run -d \
  --name ${CONTAINER_NAME} \
  -p ${PORT}:8000 \
  -e DEBUG=${DEBUG:-True} \
  -e ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1} \
  ${ACR_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}

echo ""
echo "‚úÖ Container started successfully!"
echo "üåê Access the application at: http://localhost:${PORT}"
echo ""
echo "üìã Useful commands:"
echo "  - View logs:     docker logs -f ${CONTAINER_NAME}"
echo "  - Stop server:   docker stop ${CONTAINER_NAME}"
echo "  - Remove:        docker rm ${CONTAINER_NAME}"
echo "  - Shell access:  docker exec -it ${CONTAINER_NAME} /bin/bash"
